<%= live_render(@conn, Grav1Web.ProjectsLive) %>

<div>
  <%= f = form_for(:project, "#", phx_submit: :add_project) %>
    <label for="select_encoder">encoder</label>
    <select id="select_encoder">
      <%= for encoder <- Grav1.Encoder.__enum_map__() do %>
      <option><%= encoder %></option>
      <% end %>
    </select>

    <div id="encoder_params" phx-hook="encoders">
      <%= for encoder <- Grav1.Encoder.__enum_map__() do %>
        <div id="params_<%= encoder %>" class="hidden">
          <h1><%= encoder %> params</h1>
          <%= for {param_name, param} <- Grav1.Encoder.params() |> Map.get(encoder) do %>
            <div>
              <label for="opt_<%= encoder %>_<%= param_name %>"><%= param_name %></label>
              <%= render_encoder_param(encoder, param_name, param) %>
            </div>
          <% end %>
        </div>
      <% end %>
    </div>
    <%= submit "add" %>
  </form>
</div>

<style>
  .hidden {
    display: none;
  }
</style>

<script>
  for (const encoder of encoder_params.children) {
    for (const encoder_param of encoder.children) {
      for (const opt of encoder_param.children) {
        if (opt.getAttribute("requires")) {
          const e = document.getElementById(opt.getAttribute("requires"))
          const onchange = () => opt.parentElement.classList.toggle("hidden", e.value != opt.getAttribute("requires-value"))
          e.addEventListener("change", onchange)
          onchange()
        }
      }
    }
  }
  function show_params() {
    for (const encoder_param of encoder_params.children) {
      encoder_param.classList.toggle("hidden", encoder_param.id != `params_${select_encoder.value}`) 
    }
  }

  select_encoder.addEventListener("change", () => {
    show_params()
  })

  show_params()
</script>
